name: Docker Image CI

on:
  push:
    tags:
    - v*
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Lint the codebase
      uses: golangci/golangci-lint-action@v2
      with:
        version: latest
        args: -E goimports -E godot
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
    - name: Login to DockerHub
      if: ${{ github.actor == github.repository_owner }}
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push the Docker images
      run: |
        BRANCH_NAME="${GITHUB_REF#refs/heads/}"

        if [[ "${GITHUB_REF}" =~ ^refs\/pull\/.*$ ]]; then
          BRANCH_NAME="${GITHUB_HEAD_REF#refs/heads/}"
        fi

        if [[ "${BRANCH_NAME}" == *"/"* ]]; then
          BRANCH_NAME="${BRANCH_NAME//\//-}"
        fi

        DATE="$(date -u +%Y-%m-%dT%H:%M:%SZ)"
        REF="${BRANCH_NAME:-main}"
        OTHER_ARGS=""
        OTHER_PUSH_ARGS=""

        if [[ "${GITHUB_ACTOR}" == "${GITHUB_REPOSITORY%/*}" ]]; then
          OTHER_PUSH_ARGS="${OTHER_PUSH_ARGS} --push"
          OTHER_ARGS="${OTHER_ARGS} --platform linux/arm/v7,linux/arm64,linux/amd64 --cache-to type=registry,ref=${GITHUB_REPOSITORY}-cache,mode=max"
        else
          OTHER_ARGS="${OTHER_ARGS} --load"
        fi

        if [[ "${GITHUB_REF}" =~ ^refs\/tags\/v.*$ ]]; then
          REF="${GITHUB_REF//refs\/tags\/v}"
          OTHER_ARGS="${OTHER_ARGS} -t ${GITHUB_REPOSITORY}:${GITHUB_REF//refs\/tags\/}"
          if ! [[ ${GITHUB_REF} =~ ^refs\/tags\/v.*-.*$ ]]; then
            OTHER_ARGS="${OTHER_ARGS} -t ${GITHUB_REPOSITORY}:latest"
          fi
        fi

        if ! docker buildx imagetools inspect ${GITHUB_REPOSITORY}-build-cache:latest > /dev/null 2>&1; then
          docker pull alpine:latest
          docker tag alpine:latest ${GITHUB_REPOSITORY}-build-cache:latest

          if [[ "${GITHUB_ACTOR}" == "${GITHUB_REPOSITORY%/*}" ]]; then
            docker push ${GITHUB_REPOSITORY}-build-cache:latest
          fi
        fi

        docker buildx build \
          --target release \
          --cache-from ${GITHUB_REPOSITORY}-cache \
          --build-arg VERSION=${REF} \
          --build-arg COMMIT=${GITHUB_SHA} \
          --build-arg DATE=${DATE} \
          --build-arg REPOSITORY=${GITHUB_REPOSITORY} \
          -t ${GITHUB_REPOSITORY}:${GITHUB_SHA} \
          -t ${GITHUB_REPOSITORY}:${REF} \
          ${OTHER_ARGS} ${OTHER_PUSH_ARGS} .

        if [[ "${OTHER_ARGS}" != *"--load"* ]]; then
          docker buildx build \
            --target release \
            --cache-from ${GITHUB_REPOSITORY}-cache \
            --build-arg VERSION=${REF} \
            --build-arg COMMIT=${GITHUB_SHA} \
            --build-arg DATE=${DATE} \
            --build-arg REPOSITORY=${GITHUB_REPOSITORY} \
            -t ${GITHUB_REPOSITORY}:${GITHUB_SHA} \
            -t ${GITHUB_REPOSITORY}:${REF} \
            --load .
        fi

        if [[ "${GITHUB_ACTOR}" == "${GITHUB_REPOSITORY%/*}" ]]; then
          docker buildx build \
            --target build-cache \
            --build-arg VERSION=${REF} \
            --build-arg COMMIT=${GITHUB_SHA} \
            --build-arg DATE=${DATE} \
            --build-arg REPOSITORY=${GITHUB_REPOSITORY} \
            -t ${GITHUB_REPOSITORY}-build-cache:latest \
            ${OTHER_PUSH_ARGS} .
        fi

        docker run --rm ${GITHUB_REPOSITORY}:${GITHUB_SHA} -v
